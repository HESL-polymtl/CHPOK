#******************************************************************
#
# Institute for System Programming of the Russian Academy of Sciences
# Copyright (C) 2016 ISPRAS
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, Version 3.
#
# This program is distributed in the hope # that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# See the GNU General Public License version 3 for more details.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

Import('libpok_env')

normal_sources = [
    "assert_os.c",
    "errno.c",
    "main.c",
    "msection.c",
    "process.c",
    "smalloc.c"
]

generated_sources_base = [
    "syscall_map_arinc.c"
]

libpok_core = libpok_env.StaticObject(source = normal_sources)

for generated_source_base in generated_sources_base:
    libpok_core += libpok_env.StaticObject(
        target = generated_source_base[0:-1] + 'o', # Explicitely specify target for generate it in the build tree, not in the source one.
        source = [
            # Full path is required here, as we need a dependency from the generated file.
            libpok_env['JETOS_HOME'] + '/libpok/core/' + generated_source_base
        ]
    )

Return('libpok_core')

# EOF
