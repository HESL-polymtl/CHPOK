TODO

-- Перенести jet_util_skip_char в отдельный файл вспомогательных функций (?)

-- Выбрать диалект для написания @pre в документационных комментариях

-- Написать спецификацию предусловия для jet_pt_get_node на формальном языке

-- Разрешить в coding guidelines про комментарии в стиле C++ (//) (посоветоваться с Хорошиловым)

-- Дописать в coding guidelines разрешения для union типов

-- Разрешить в coding_guidelines объявлять переменные после инструкций (как в C++)

-- Написать второй интерфейс, в котором tree и node не разделяются.

-- Изменить сигнатуру strlen в ядре с int strlen(...) на size_t strlen(...)
-- Вообще, изменить все локальные переменные типа namelen на size_t

-- Как специфицировать локальные инварианты в тексте? Сейчас я использую комментарии // Выполняется: 

-- Посмотреть в doxygen как включать в строку идентификатор в стиле typewriter

-- В функции kernel/include/uapi/types.h сделать беззнаковую длину

-- Сделать верификатор для бинарного представления дерева. Убедиться, что на борт идёт 
	корректное бинарное представление дерева.


kernel/include/uapi/types.h
-- Сделать в POK алиас типа por_ret_t: typedef por_ret_t jet_ret_t
-- Сделать в POK алиас типа por_bool_t: typedef por_ret_t jet_bool_t

-- Обсудить расширение кодов ошибки в pok_ret_t
	Вопрос: как мне добавить специфические ошибки работы с деревом?
	Предлагаю нарезать пространство ошибок на непересекающиеся диапазоны
