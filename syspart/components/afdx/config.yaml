- name: AFDX_FILLER
  additional_h_files: ['"afdx.h"']
  state_struct:
      # vl identificator
        vl_id: uint16_t
        ttl: uint8_t
        src_partition_id: uint8_t
        dst_partition_id: uint8_t
        src_afdx_port: uint16_t
        dst_afdx_port: uint16_t
        sn: uint8_t
        type_of_packet: PACKET_TYPE

  init_func: afdx_filler_init

  in_ports:
      - name: portA
        type: preallocated_sender
        implementation:
           send: afdx_filler_send
           flush: afdx_filler_flush

  out_ports:
       - name: portB
         type: preallocated_sender

- name: AFDX_QUEUE_ENQUEUER
  additional_h_files: ['"afdx.h"', <arinc653/time.h>]
  state_struct:
        BAG: SYSTEM_TIME_TYPE
        buffer: afdx_buffer *
        # the index in the queue for information that should be read
        head: size_t
        # the index in the queue where you want to record information
        tail: size_t
        cur_queue_size: size_t
        prepend_overhead: size_t
        append_overhead: size_t
        max_queue_size: size_t
        min_next_time: SYSTEM_TIME_TYPE
#temporary solution until we can generate a periodic process components

  init_func: afdx_queue_init
  activity: afdx_queue_enqueuer_activity

  in_ports:
      - name: portB
        type: preallocated_sender
        implementation:
            send: afdx_enqueuer_implementation
            flush: afdx_enqueuer_flush

  out_ports:
      - name: portNetA
        type: preallocated_sender

      - name: portNetB
        type: preallocated_sender
