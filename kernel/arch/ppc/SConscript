#******************************************************************
#
# Institute for System Programming of the Russian Academy of Sciences
# Copyright (C) 2016 ISPRAS
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, Version 3.
#
# This program is distributed in the hope # that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# See the GNU General Public License version 3 for more details.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

Import('arch_env')

libfdt = SConscript('libfdt/SConscript')

arch = arch_env.StaticObject(source = Glob('*.[Sc]'))

if arch_env.get('jdeveloper'):
    import sys
    import os
    sys.path.insert(1, os.path.join(os.environ["POK_PATH"], "misc"))
    import template_generation
    AddMethod(arch_env, template_generation.BuildAsmOffsets)

    current_source_dir = arch_env.Dir('.').srcnode().path

    asm_offsets = arch_env.BuildAsmOffsets(current_source_dir + "/asm_offsets.h", "asm_offsets.def",
        GENERATE_TITLE = template_generation.generate_title_c)

    arch_env.Depends(arch, asm_offsets)

Return('arch', 'libfdt')

# EOF
